(()=>{var e={471:()=>{class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n<style>\n    .note-form {\n        display: flex;\n        background-color: white;\n        padding: 1rem;\n        border-radius: 10px;\n        width: 500px;\n        flex-direction: column;\n    }\n    .form-group {\n        margin-bottom: 16px;\n    }\n    .form-group.date {\n        // margin-bottom: 0; /* Remove extra margin for date field */\n    }\n\n    label {\n        display: block;\n        margin-bottom: 8px;\n        font-weight: bold;\n    }\n    input, textarea {\n        width: 100%;\n        padding: 12px;\n        border-radius: 4px;\n        border: 1px solid #ddd;\n        box-sizing: border-box;\n    }\n    textarea {\n        height: 100px;\n        resize: vertical;\n    }\n    button {\n        background: #007bff;\n        color: white;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 4px;\n        cursor: pointer;\n        transition: background-color 0.3s;\n        align-self: flex-end; /* Align button to the end */\n    }\n    button:hover {\n        background: #0056b3;\n    }\n    .error {\n        color: red;\n        font-size: 0.875em;\n        margin-top: 4px;\n    }\n</style>\n\n          \x3c!-- components/note-form.js --\x3e\n<form class="note-form" id="noteForm">\n    <h3>Catat Kegiatan Anda Masa Lalu dan Masa Mendatang!</h3>\n    <div class="form-group">\n        <label for="title">Judul</label>\n        <input type="text" id="title" name="title" required placeholder="Masukkan judul catatan!">\n        <div class="error" id="titleError"></div>\n    </div>\n    <div class="form-group">\n        <label for="body">Isi</label>\n        <textarea id="body" name="body" placeholder="Masukkan isi catatan!" required></textarea>\n        <div class="error" id="bodyError"></div>\n    </div>\n    <div class="form-group date">\n        <label for="date">Tanggal</label>\n        <input type="date" id="date" name="date" required>\n        <div class="error" id="dateError"></div>\n    </div>\n    <button type="submit">Tambah Catatan</button>\n</form>\n\n        '}connectedCallback(){this.shadowRoot.querySelector("#noteForm").addEventListener("submit",(e=>{e.preventDefault();const t=this.shadowRoot.querySelector("#title").value,o=this.shadowRoot.querySelector("#body").value,n=this.shadowRoot.querySelector("#date").value;this.shadowRoot.querySelectorAll(".error").forEach((e=>e.textContent=""));let r=!0;t||(this.shadowRoot.querySelector("#titleError").textContent="Judul tidak boleh kosong",r=!1),o||(this.shadowRoot.querySelector("#bodyError").textContent="Isi tidak boleh kosong",r=!1),n||(this.shadowRoot.querySelector("#dateError").textContent="Tanggal tidak boleh kosong",r=!1),r&&(this.dispatchEvent(new CustomEvent("noteAdded",{detail:{title:t,body:o,date:n},bubbles:!0,composed:!0})),this.shadowRoot.querySelector("#noteForm").reset(),this.dispatchEvent(new CustomEvent("formClosed",{bubbles:!0,composed:!0})))}))}}customElements.define("note-form",e)},518:()=>{class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n<style>\n    .note-item {\n        padding: 16px;\n        border-radius: 8px;\n        background: white;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        box-sizing: border-box;\n    }\n    .note-item h3 {\n        margin: 0;\n        font-size: 1.2em;\n    }\n    .note-item .date {\n        font-size: 0.9em;\n        color: #666;\n        margin-top: 10px;\n    }\n    p {\n        margin: 10px 0;\n        overflow: hidden;\n        word-wrap: break-word;\n    }\n    #deleteButton {\n        background: #e74c3c;\n        color: white;\n        border: none;\n        padding: 6px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n        margin-top: auto;\n        align-self: flex-end;\n    }\n    #deleteButton:hover {\n        background: #c0392b;\n    }\n</style>\n\n         \x3c!-- components/note-item.js --\x3e\n<div class="note-item">\n    <h3></h3>\n    <p></p>\n    <div class="date"></div>\n    <button id="deleteButton">Delete</button>\n</div>\n\n        '}connectedCallback(){this.shadowRoot.querySelector("h3").textContent=this.getAttribute("title"),this.shadowRoot.querySelector("p").textContent=this.getAttribute("body"),this.shadowRoot.querySelector(".date").textContent=this.getAttribute("date"),this.shadowRoot.querySelector("#deleteButton").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("deleteNote",{detail:{id:this.getAttribute("id")},bubbles:!0,composed:!0}))}))}}customElements.define("note-item",e)}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var d=t[n]={exports:{}};return e[n](d,d.exports,o),d.exports}(()=>{"use strict";const e=[{id:"notes-jT-jjsyz61J8XKiI",title:"Welcome to Notes, Dimas!",body:"Welcome to Notes! This is your first note. You can archive it, delete it, or create new ones.",createdAt:"2022-07-28T10:03:12.594Z",archived:!1},{id:"notes-aB-cdefg12345",title:"Meeting Agenda",body:"Discuss project updates and assign tasks for the upcoming week.",createdAt:"2022-08-05T15:30:00.000Z",archived:!1},{id:"notes-XyZ-789012345",title:"Shopping List",body:"Milk, eggs, bread, fruits, and vegetables.",createdAt:"2022-08-10T08:45:23.120Z",archived:!1},{id:"notes-1a-2b3c4d5e6f",title:"Personal Goals",body:"Read two books per month, exercise three times a week, learn a new language.",createdAt:"2022-08-15T18:12:55.789Z",archived:!1},{id:"notes-LMN-456789",title:"Recipe: Spaghetti Bolognese",body:"Ingredients: ground beef, tomatoes, onions, garlic, pasta. Steps:...",createdAt:"2022-08-20T12:30:40.200Z",archived:!1},{id:"notes-QwErTyUiOp",title:"Workout Routine",body:"Monday: Cardio, Tuesday: Upper body, Wednesday: Rest, Thursday: Lower body, Friday: Cardio.",createdAt:"2022-08-25T09:15:17.890Z",archived:!1},{id:"notes-abcdef-987654",title:"Book Recommendations",body:"1. 'The Alchemist' by Paulo Coelho\n2. '1984' by George Orwell\n3. 'To Kill a Mockingbird' by Harper Lee",createdAt:"2022-09-01T14:20:05.321Z",archived:!1},{id:"notes-zyxwv-54321",title:"Daily Reflections",body:"Write down three positive things that happened today and one thing to improve tomorrow.",createdAt:"2022-09-07T20:40:30.150Z",archived:!1},{id:"notes-poiuyt-987654",title:"Travel Bucket List",body:"1. Paris, France\n2. Kyoto, Japan\n3. Santorini, Greece\n4. New York City, USA",createdAt:"2022-09-15T11:55:44.678Z",archived:!1},{id:"notes-asdfgh-123456",title:"Coding Projects",body:"1. Build a personal website\n2. Create a mobile app\n3. Contribute to an open-source project",createdAt:"2022-09-20T17:10:12.987Z",archived:!1},{id:"notes-5678-abcd-efgh",title:"Project Deadline",body:"Complete project tasks by the deadline on October 1st.",createdAt:"2022-09-28T14:00:00.000Z",archived:!1},{id:"notes-9876-wxyz-1234",title:"Health Checkup",body:"Schedule a routine health checkup with the doctor.",createdAt:"2022-10-05T09:30:45.600Z",archived:!1},{id:"notes-qwerty-8765-4321",title:"Financial Goals",body:"1. Create a monthly budget\n2. Save 20% of income\n3. Invest in a retirement fund.",createdAt:"2022-10-12T12:15:30.890Z",archived:!1},{id:"notes-98765-54321-12345",title:"Holiday Plans",body:"Research and plan for the upcoming holiday destination.",createdAt:"2022-10-20T16:45:00.000Z",archived:!1},{id:"notes-1234-abcd-5678",title:"Language Learning",body:"Practice Spanish vocabulary for 30 minutes every day.",createdAt:"2022-10-28T08:00:20.120Z",archived:!1}];function t(){const t=document.querySelector(".notes-container");t.innerHTML="",e.forEach((e=>{const o=document.createElement("note-item");o.setAttribute("id",e.id),o.setAttribute("title",e.title),o.setAttribute("body",e.body),o.setAttribute("date",e.createdAt),t.appendChild(o)}))}o(471),o(518),document.addEventListener("DOMContentLoaded",(()=>{t();const o=document.querySelector("#noteFormModal");document.querySelector("#openFormBtn").addEventListener("click",(()=>{o.style.display="flex"})),document.querySelector("note-form").addEventListener("noteAdded",(n=>{const r={id:`notes-${Date.now()}`,...n.detail,createdAt:(new Date).toISOString(),archived:!1};e.push(r),t(),o.style.display="none"})),document.querySelector(".notes-container").addEventListener("deleteNote",(o=>{const{id:n}=o.detail,r=e.findIndex((e=>e.id===n));-1!==r&&(e.splice(r,1),t())}))}))})()})();